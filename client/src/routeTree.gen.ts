/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as RegisterImport } from "./routes/register";
import { Route as ProfileImport } from "./routes/profile";
import { Route as LoginImport } from "./routes/login";
import { Route as GenerateUrlsImport } from "./routes/GenerateUrls";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: "/register",
  path: "/register",
  getParentRoute: () => rootRoute,
} as any);

const ProfileRoute = ProfileImport.update({
  id: "/profile",
  path: "/profile",
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const GenerateUrlsRoute = GenerateUrlsImport.update({
  id: "/GenerateUrls",
  path: "/GenerateUrls",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/GenerateUrls": {
      id: "/GenerateUrls";
      path: "/GenerateUrls";
      fullPath: "/GenerateUrls";
      preLoaderRoute: typeof GenerateUrlsImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/profile": {
      id: "/profile";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof ProfileImport;
      parentRoute: typeof rootRoute;
    };
    "/register": {
      id: "/register";
      path: "/register";
      fullPath: "/register";
      preLoaderRoute: typeof RegisterImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/GenerateUrls": typeof GenerateUrlsRoute;
  "/login": typeof LoginRoute;
  "/profile": typeof ProfileRoute;
  "/register": typeof RegisterRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/GenerateUrls": typeof GenerateUrlsRoute;
  "/login": typeof LoginRoute;
  "/profile": typeof ProfileRoute;
  "/register": typeof RegisterRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/GenerateUrls": typeof GenerateUrlsRoute;
  "/login": typeof LoginRoute;
  "/profile": typeof ProfileRoute;
  "/register": typeof RegisterRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/GenerateUrls" | "/login" | "/profile" | "/register";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/GenerateUrls" | "/login" | "/profile" | "/register";
  id: "__root__" | "/" | "/GenerateUrls" | "/login" | "/profile" | "/register";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  GenerateUrlsRoute: typeof GenerateUrlsRoute;
  LoginRoute: typeof LoginRoute;
  ProfileRoute: typeof ProfileRoute;
  RegisterRoute: typeof RegisterRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GenerateUrlsRoute: GenerateUrlsRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/GenerateUrls",
        "/login",
        "/profile",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/GenerateUrls": {
      "filePath": "GenerateUrls.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
